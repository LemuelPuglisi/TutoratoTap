
# Ogni immagine deve partire da una istruzione FROM, che indica
# lo starting point (es. uno specifico sistema operativo). Lo 
# starting point alla base di tutto è "FROM scratch". Utilizzeremo
# un sistema operativo molto lightweight, chiamato Alpine Linux. 
# reference: https://alpinelinux.org/
# Se non inserite il tag (es. 3.14) docker installerà la versione "latest". 

FROM alpine:3.14 

# installiamo ciò che ci serve. 

RUN apk update && \
    apk add --no-cache python3 
# py3-pip per adesso non serve. 

# Copiamo il codice sorgente nell'immagine
# Lo potremo trovare sotto /app/logger.py, dato
# che settiamo la working directory su /app

WORKDIR /app

COPY logger/simple-logger.py simple-logger.py

# Setting PYTHONUNBUFFERED to a non empty value ensures that the python 
# output is sent straight to terminal (e.g. your container log) without 
# being first buffered and that you can see the output of your application 
# (e.g. django logs) in real time.
# https://stackoverflow.com/questions/59812009/what-is-the-use-of-pythonunbuffered-in-docker-file

ENV PYTHONUNBUFFERED=0

CMD ["python3", "-u", "simple-logger.py"]